@import url(variables.css);

.articles {
    background-color: var(--veryLightGray);
}

/* .a .b .c means nested class 
.articles .article_content {}*/

.article_grid {
    /* Flex box is contentbased that means the content will be automatically fit.
    But grid is column calculation based, I have toh calculate the colum firts. */

    display: grid;
    gap: 30px;
}

/* For Desktop */
@media only screen and (min-width: 767.1px) {

    .article_grid {
        grid-template-columns: repeat(4, 1fr);
        /* 4 means 4 columns and 1fr means equal ratio*/
    }

    .article_text {
        padding: 30px 25px;
    }

}

/* For Tablets */
@media only screen and (min-width: 640.1px) and (max-width: 767px) {
    .article_grid {
        grid-template-columns: repeat(2, 1fr);
        /* 2 means 2 columns and 1fr means equal ratio*/
    }

    .article_text {
        padding: 30px 25px;
    }
}

/* For Mobile */
@media only screen and (max-width: 640px) {

    .article_grid {
        grid-template-columns: 1fr;

        /* 1fr means it will space as much as possible. If there are more childs it will divide the space between them equally. */
    }

    .article_text {
        padding: 30px 30px 40px 30px;
    }

}

/* Instead of media query it should be written. But uneven colums will be there like 3.
    auto-fit will take according to content and auto-fill will take the entire row.
    
.article_grid{
        display:grid;
        grid-template-columns: repeat(auto-fit, minmax(230px, 1fr));

    
    } */

.article_items {
    border-radius: 5px;
    overflow: hidden;
    box-shadow: 0px 3px 12px rgba(0, 0, 0, 0.15);
    background-color: white;
    transition: all 150ms ease-in-out;

}

.article_items:hover {
    transform: scale(1.05);
}


.article_image {
    height: 200px;
    background-size: cover;
    /*cover will take the entire div */
    background-repeat: no-repeat;
    background-position: center center;
}

.article_text {

    color: var(--grayishBlue);
}

.article_author {
    font-size: 10px;
    margin-bottom: 12px;
}

.article_title {
    font-size: 17px;
    line-height: 1.2;
    /* 1 means same of the font height*/
    color: var(--darkBlue);
    margin-bottom: 8px;
}

.article_description {
    font-size: 13px;
}